"use client"
// import type { Metadata } from "next";
import { Poppins } from "next/font/google";
import "./globals.css";
import { TailwindIndicator } from "@/components/layout/tailwind-indicator";
import { SiteHeader } from "@/components/layout/site-header";
import { ThemeProvider } from "@/providers/theme-provider";
import { usePathname } from "next/navigation";

const poppins = Poppins({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  variable: "--font-poppins",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

function LayoutContent({ children }: { children: React.ReactNode }) {
  const pathname = usePathname();
  const isWorkspace = pathname === "/workspace";

  if (isWorkspace) {
    return (
      <div className='relative min-h-screen flex flex-col'>
        <SiteHeader />
       <div className="flex-1 h-full">
        {children}
        </div>
      </div>
    );
  }

  return (
    <div className='relative flex min-h-screen flex-col'>
      <SiteHeader />
      <div className="flex-1 px-16 py-6 h-full">
        {children}
      </div>
    </div>
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${poppins.variable} font-poppins antialiased`}
      >
         <ThemeProvider attribute='class' defaultTheme='system' enableSystem>
          <LayoutContent>
            {children}
          </LayoutContent>
          <TailwindIndicator />
      </ThemeProvider>
      </body>
    </html>
  );
}
